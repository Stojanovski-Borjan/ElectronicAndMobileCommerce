POST http://localhost:8080/api/manage/locations
Content-Type: application/x-www-form-urlencoded

name=cityMall&city=Skopje&country=Macedonia&coordinates=22.200,49.501

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the locationId');
  client.global.set("newLocationUrl", response.headers.valueOf("Location"));
  client.global.set("locationId", response.body["id"]);
});
%}

###
POST http://localhost:8080/api/manage/users
name: Tester
email: test@rent.com
password: password

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the locationId');
  client.global.set("newUserUrl", response.headers.valueOf("Location"));
  client.global.set("userId", response.body["id"]);
});
%}

###
GET http://localhost:8080/api/manage/users/id/{{userId}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/manage/users/email/test@rent.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

### Locations
GET http://localhost:8080/api/rental/locations

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/locations
city: Skopje

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/locations
country: Macedonia

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/locations
city: Skopje
country: Macedonia

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/locations?term=Bit
city: Skopje
country: Macedonia

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/locations?term=rekord

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
POST http://localhost:8080/api/manage/locations

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/manage/locations?name=cityMall

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

### form params
POST http://localhost:8080/api/manage/locations
Content-Type: application/x-www-form-urlencoded

name=cityMall&city=Skopje&country=Macedonia&coordinates=22.200,49.501

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the locationId');
  client.global.set("newLocationUrl", response.headers.valueOf("Location"));
  client.global.set("locationId", response.body["id"]);
});
%}

###
GET {{newLocationUrl}}

> {%
 client.test("Request executed successfully", function() {
 client.assert(response.status === 200, "Response status is not 200");
});

%}

###
PATCH http://localhost:8080/api/manage/locations/{{locationId}}
Content-Type: application/x-www-form-urlencoded

name=Gtc&city=Skopje&country=Macedonia&coordinates=21,49.501

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the locationId');
});
%}

###
GET {{newLocationUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
GET http://localhost:8080/api/rental/vehicles/{{locationId}}?startDate=2020-05-10&startTime=10:00:00&endDate=2020-05-10&endTime=14:00:00

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
DELETE {{newLocationUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### Set some vehicles to location
PATCH http://localhost:8080/api/manage/vehicles/COVID-17
Content-Type: application/x-www-form-urlencoded

dateBought=2020-01-15&modelName=cheapScooter&locationId=1&onTheRoad=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
});
%}

### Set some vehicles to location
PATCH http://localhost:8080/api/manage/vehicles/COVID-18
Content-Type: application/x-www-form-urlencoded

dateBought=2018-01-15&modelName=cheapScooter&locationId=1&onTheRoad=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
});
%}

### Set some vehicles to location
PATCH http://localhost:8080/api/manage/vehicles/COVID-19
Content-Type: application/x-www-form-urlencoded

dateBought=2020-01-15&modelName=cheapScooter&locationId=1&onTheRoad=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
});
%}

### Set some vehicles to location
PATCH http://localhost:8080/api/manage/vehicles/COVID-20
Content-Type: application/x-www-form-urlencoded

dateBought=2020-03-15&modelName=cheapScooter&locationId=1&onTheRoad=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
});
%}

### Promotions
GET http://localhost:8080/api/rental/promotions?date=2020-05-10

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

### Invalid date input
GET http://localhost:8080/api/rental/promotions?date=2020

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

### missing header
GET http://localhost:8080/api/rental/promotions/best

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
GET http://localhost:8080/api/rental/promotions/best
discount: 0.15

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/promotions/newest

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

### missing required param
POST http://localhost:8080/api/manage/promotions
Content-Type: application/x-www-form-urlencoded

name=WomansDayPromotion&validFrom=2021-03-06&validTo=2020-03-09

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/manage/promotions
Content-Type: application/x-www-form-urlencoded

name=HappyMonth&discount=0.1&validFrom=2020-05-01&validTo=2020-05-30

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the reservationId');
  client.global.set("newPromotionUrl", response.headers.valueOf("Location"));
  client.global.set("promotionId", response.body["name"]);
});
%}

###
GET {{newPromotionUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET {{newPromotionUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### Model and vehicles
GET http://localhost:8080/api/rental/models

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/vehicles/1?startDate=2020-05-10&startTime=10:00:00&endDate=2020-05-10&endTime=14:00:00

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET http://localhost:8080/api/rental/vehicles/2?startDate=2020-05-10&startTime=10:00:00&endTime=14:00:00

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

####
#GET http://localhost:8080/api/rental/vehicles/2?startDate=2020-05-10&startTime=10:00:00&endDate=2020-05-10&endTime=14:00:00
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 200, "Response status is not 200");
#});
#
#%}

### missing params
POST http://localhost:8080/api/manage/models
Content-Type: application/x-www-form-urlencoded

name=commonScooter&vehicleType=SCOOTER
> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/manage/models
Content-Type: application/x-www-form-urlencoded

name=commonScooter&vehicleType=SCOOTER&description=bestForPrice&pricePerMinute=10

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("modelName"), 'Can not find the modelId');
  client.global.set("newModelUrl", response.headers.valueOf("Location"));
  client.global.set("modelId", response.body["modelName"]);
});
%}

###
POST http://localhost:8080/api/manage/models
Content-Type: application/x-www-form-urlencoded

name=deleteScooter&vehicleType=SCOOTER&description=bestForPrice&pricePerMinute=10

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("modelName"), 'Can not find the modelId');
  client.global.set("newModel1Url", response.headers.valueOf("Location"));
  client.global.set("model1Id", response.body["modelName"]);
});
%}

### missing serial Number
POST http://localhost:8080/api/manage/vehicles
Content-Type: application/x-www-form-urlencoded

dateBought=2020-01-15&description=GreatCondition&modelName=commonScooter
> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/manage/vehicles
Content-Type: application/x-www-form-urlencoded

serialNo=VIN-205&dateBought=2020-01-15&description=GreatCondition&modelName=commonScooter&locationId=1

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
  client.global.set("newVehicleUrl", response.headers.valueOf("Location"));
  client.global.set("vehicleId", response.body["serialNo"]);
});
%}

###
GET {{newModelUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
GET {{newVehicleUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

### missing params
PATCH http://localhost:8080/api/manage/models/{{modelId}}
Content-Type: application/x-www-form-urlencoded

description=bestForPrice&pricePerMinute=20

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
  });
%}

###
PATCH http://localhost:8080/api/manage/models/{{modelId}}
Content-Type: application/x-www-form-urlencoded

name=commonScooter&vehicleType=SCOOTER&description=changed&pricePerMinute=15

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("modelName"), 'Can not find the modelId');
});
%}

###
GET {{newModelUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

### missing params
PATCH http://localhost:8080/api/manage/vehicles/{{vehicleId}}
Content-Type: application/x-www-form-urlencoded

serialNo=VIN-205&dateBought=2020-01-15&decsription=GreatCondition

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
  });
%}

###
PATCH http://localhost:8080/api/manage/vehicles/{{vehicleId}}
Content-Type: application/x-www-form-urlencoded

dateBought=2020-01-15&modelName=cheapScooter&locationId=1&onTheRoad=true

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("serialNo"), 'Can not find the vehicleId');
});
%}

###
GET {{newVehicleUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

### Reservations
GET http://localhost:8080/api/rental/reservations

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
GET http://localhost:8080/api/rental/reservations
userEmail: someEmail@email.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}

###
POST http://localhost:8080/api/rental/reservations

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/rental/reservations
userEmail: test@rentscoot.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}
### Invalid email
POST http://localhost:8080/api/rental/reservations
userEmail: test
locationId: 1
modelNames: SCOOTER,EBIKE,SCOOTER
promotion: Women's_day
Content-Type: application/x-www-form-urlencoded

StarDate= &StartTime= %EndDate= &EndTime=

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});

%}

###
POST http://localhost:8080/api/rental/reservations
userId: {{userId}}
locationId: {{locationId}}
modelNames: cheapScooter,cheapScooter
promotion: HappyMonth
Content-Type: application/x-www-form-urlencoded

startDate=2020-05-11&startTime=16:00:00&endDate=2020-05-11&endTime=19:00:00

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "Response status is not 201");
  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the reservationId');
  client.global.set("newReservationUrl", response.headers.valueOf("Location"));
  client.global.set("reservationId", response.body["id"]);
});
%}

####  Management with reservations - no used
#POST http://localhost:8080/api/manage/reservations
#userId: 1
#locationId: 15
#modelNames: SCOOTER,EBIKE,SCOOTER,EBIKE
#promotion: Women's_day
#Content-Type: application/x-www-form-urlencoded
#
#startDate=2020-05-10&startTime=14:00:00&endDate=2020-05-10&endTime=16:00:00
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 400, "Response status is not 400");
#});
#%}
#
####
#POST http://localhost:8080/api/manage/reservations
#userId: 1
#locationId: 1
#modelNames: SCOOTER,EBIKE,SCOOTER,EBIKE
#promotion: FakePromotion
#Content-Type: application/x-www-form-urlencoded
#
#startDate=2020-05-10&startTime=14:00:00&endDate=2020-05-10&endTime=16:00:00
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 400, "Response status is not 400");
#});
#%}
#
####
#POST http://localhost:8080/api/manage/reservations
#userId: 1
#locationId: 1
#modelNames: SCOOTER,EBIKE,SCOOTER,EBIKE
#promotion: HappyMonth
#Content-Type: application/x-www-form-urlencoded
#
#startDate=2020-05-10&startTime=14:00:00&endTime=16:00:00
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 400, "Response status is not 400");
#});
#%}
#
#### Error
#POST http://localhost:8080/api/manage/reservations
#userId: 1
#locationId: 1
#modelNames: cheapScooter
#promotion: HappyMonth
#Content-Type: application/x-www-form-urlencoded
#
#startDate=2020-05-11&startTime=17:00:00&endDate=2020-05-11&endTime=17:30:00
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 201, "Response status is not 201");
#  client.assert(response.headers.valueOf("Location")!= null, "Invalid Location");
#  client.assert(response.body.hasOwnProperty("id"), 'Can not find the reservationId');
#  client.global.set("newReservationUrl", response.headers.valueOf("Location"));
#  client.global.set("reservationId", response.body["id"]);
#});
#%}
#
####
#GET {{newReservationUrl}}
#
#> {%
#client.test("Request executed successfully", function() {
#  client.assert(response.status === 200, "Response status is not 200");
#});
#
#%}
#
###
PATCH http://localhost:8080/api/manage/reservations/{{reservationId}}
userId: {{userId}}
locationId: {{locationId}}
modelNames: cheapScooter,cheapScooter
promotion: Fathers day
Content-Type: application/x-www-form-urlencoded

startDate=2020-05-12&startTime=14:00:00&endDate=2020-05-12&endTime=18:00:00

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("id"), 'Can not find the reservationId');
});
%}

###
GET {{newReservationUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
DELETE {{newReservationUrl}}

> {%
 client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}


### Has vehicles assigned
DELETE http://localhost:8080/api/manage/models/cheapScooter

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 400");
});
%}

### Hasn't got any vehicles assigned
DELETE {{newModel1Url}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
DELETE {{newVehicleUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###
PATCH http://localhost:8080/api/manage/promotions/{{promotionId}}
Content-Type: application/x-www-form-urlencoded

description=notEmpty&validFrom=2021-03-03&discount=0.3&validTo=2021-03-09

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
  client.assert(response.body.hasOwnProperty("name"), 'Can not find the promotionId');
});
%}

### Only allowed after every reservation is finished and payed
DELETE {{newPromotionUrl}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "Response status is not 4c00");
});
%}

###
DELETE http://localhost:8080/api/manage/users/{{userId}}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

%}